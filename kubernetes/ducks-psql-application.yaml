apiVersion: apps/v1
kind: Deployment
metadata:
  name:  ducks-psql
  labels:
    name:  ducks-psql
spec:
  replicas: 1
  selector:
    matchLabels:
      server: ducks-psql
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        server: ducks-psql
    spec:
      containers:
        - name: ducks-server-psql
          image: ducks-psql:4
          imagePullPolicy: Never
          resources:
            limits:
              memory: "500M"
              cpu: "500m"
          ports:
            - containerPort: 8080
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  name: postgres-configmap
                  key: POSTGRES_DB
            - name: POSTGRES_HOST
              valueFrom:
                configMapKeyRef:
                  name: postgres-configmap
                  key: POSTGRES_HOST
---
apiVersion: v1
kind: Service
metadata:
  name: ducks-psql-service
spec:
  selector:
    server: ducks-psql
  type: ClusterIP
  ports:
    - port: 8180
      targetPort: 8080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ducks-psql-ingress
  labels:
    name: ducks-psql-ingress
spec:
  rules:
    - host: ducks-psql.local
      http:
        paths:
          - pathType: Prefix
            path: "/"
            backend:
              service:
                name: ducks-psql-service
                port:
                  number: 8180
