apiVersion: apps/v1
kind: Deployment
metadata:
  name:  ducks-psql-deployment
  labels:
    name:  ducks-psql-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      server: ducks-psql
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        server: ducks-psql
    spec:
      containers:
        - name: ducks-server-psql
          image: ducks-psql:latest
          imagePullPolicy: Never
          resources:
            limits:
              memory: "500M"
              cpu: "500m"
          ports:
            - containerPort: 8080
          env:
            - name: POSTGRES_USERNAME
              value: ps_user
            - name: POSTGRES_PASSWORD
              value: SecurePassword
            - name: POSTGRES_DATABASE
              value: ps_db
            - name: POSTGRES_HOSTNAME
              value: postgres
#          volumeMounts:
#            - name: ducks-json
#              mountPath: /src/main/resources
#      volumes:
#        - name: ducks-json
#          configMap:
#            name: ducks-empty-json
#            items:
#              - key: ducks.json
#                path: ducks.json
---
apiVersion: v1
kind: Service
metadata:
  name: ducks-service-psql
spec:
  selector:
    server: ducks-psql
  type: ClusterIP
  ports:
    - port: 8180
      targetPort: 8080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ducks-ingress-psql
  labels:
    name: ducks-ingress-psql
spec:
  rules:
    - host: ducks-psql.local
      http:
        paths:
          - pathType: Prefix
            path: "/"
            backend:
              service:
                name: ducks-service-psql
                port:
                  number: 8180
